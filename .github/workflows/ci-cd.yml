name: CI/CD Pipeline

# Trigger the workflow on push or pull request to the 'ci-test' branch
on:
  push:
    branches:
      - ci-test
  pull_request:
    branches:
      - ci-test

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install pip and dependencies (for yoyo and pytest)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Build the Docker Compose services (build and start the containers)
      - name: Build and start Docker Compose services
        run: |
          docker-compose up --build -d

      # Step 5: Wait for the database to be ready (use healthcheck from Docker)
      - name: Wait for Postgres
        run: |
          until docker exec business-db pg_isready -U postgres; do
            echo "Waiting for database to be ready..."
            sleep 2
          done

      # Step 6: Run Yoyo Migrations to apply the database migrations
      - name: Run yoyo migrations
        run: |
          yoyo apply artifacts/migrations

      # Step 7: Run the tests using pytest
      - name: Run Pytest tests
        run: |
          pytest .

      # Step 8: Tear down Docker Compose services after the test run
      - name: Stop and remove Docker containers
        if: always()
        run: docker-compose down
